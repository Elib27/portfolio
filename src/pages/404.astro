---
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import Layout from '../layouts/Layout.astro'
import Logo from '../components/Logo.astro'
import WavesBackground from '../components/WavesBackground.astro'
import ToggleThemeButton from '../components/ToggleThemeButton.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const homeLink = lang === 'fr' ? '/' : `/${lang}`
---

<Layout noIndex>
  <div class="nav-wrapper">
    <Logo link="/" />
    <ToggleThemeButton id="desktop" />
  </div>
  <div class="wrapper">
    <h1>{t('pageNotFound.title')} ðŸ”­</h1>
    <div class="container">
      <div class="four-container">
        <div class="four">4</div>
        <div class="four">4</div>
        <div class="four">4</div>
        <div class="four">4</div>
      </div>
      <div class="zero">0</div>
    </div>
    <a class="home-link" href={homeLink}>{t('pageNotFound.button')}</a>
  </div>
  <WavesBackground />
</Layout>

<style lang="scss">
  .nav-wrapper {
    width: 100%;
    position: absolute;
    top: 1rem;
    left: 0;
    padding: 0 3rem 0 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 999;
  }
  .wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100%;
    overflow: hidden;
    h1 {
      font-size: clamp(3rem, 5vw, 4rem);
      font-weight: 800;
      text-align: center;
      color: var(--text);
      padding: 0 1rem;
      margin-bottom: 2rem;
      transition: color var(--theme-transition);
    }
    .container {
      width: 18rem;
      height: 18rem;
      color: var(--text);
      font-size: 5rem;
      font-weight: 800;
      position: relative;
      --rotationParams: 2.2s infinite cubic-bezier(0.75, 0, 0.25, 1);
      --colorParams: 2.2s infinite cubic-bezier(0.75, 0, 0.25, 1);
      .four-container {
        height: 100%;
        width: 100%;
        display: grid;
        place-items: center;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(3, 1fr);
        animation: fourContainerRotation var(--rotationParams);
      }
      .four {
        animation: fourRotation var(--rotationParams);
        transition: color var(--theme-transition);
        &:nth-child(1) {
          grid-area: 1 / 2 / 2 / 3;
        }
        &:nth-child(2) {
          grid-area: 2 / 3 / 3 / 4;
        }
        &:nth-child(3) {
          grid-area: 3 / 2 / 4 / 3;
        }
        &:nth-child(4) {
          grid-area: 2 / 1 / 3 / 2;
        }
        &:nth-child(2n + 1) {
          animation:
            fourRotation var(--rotationParams),
            colorChange var(--colorParams);
        }
      }
    }
    .zero {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      animation: colorChange var(--colorParams);
    }
    .home-link {
      font-size: 1.6rem;
      font-weight: 700;
      padding: 1rem 2rem;
      margin: 2rem 0;
      line-height: 1;
      color: var(--white);
      border-radius: 0.8rem;
      background-color: var(--accent);
      transition: transform 0.1s ease-out;
      &:active {
        transform: scale(0.98);
      }
    }
  }

  @keyframes fourContainerRotation {
    0% {
      transform: rotate(0deg);
    }
    80% {
      transform: rotate(90deg);
    }
    100% {
      transform: rotate(90deg);
    }
  }
  @keyframes fourRotation {
    0% {
      transform: rotate(0deg);
    }
    80% {
      transform: rotate(-90deg);
    }
    100% {
      transform: rotate(-90deg);
    }
  }
  @keyframes colorChange {
    0% {
      color: var(--text);
    }
    65% {
      color: var(--text);
    }
    85% {
      color: var(--accent);
    }
    100% {
      color: var(--text);
    }
  }
</style>
