---
import ToggleThemeButton from '../components/ToggleThemeButton.astro'
import Logo from '../components/Logo.astro'

export interface Props {
  languageLink: 'en' | 'fr'
}
const { languageLink } = Astro.props
---

<div class="nav-wrapper">
  <Logo />
  <div class="mobile-buttons animated">
    <ToggleThemeButton id="mobile" />
    <button class="hamburger" aria-expanded="false">
      <span class="line"></span>
      <span class="line"></span>
      <span class="line"></span>
    </button>
  </div>
  <nav class="desktop animated" aria-label="Navigation sur ordinateur">
    <ul>
      <li><a href="#about">A propos</a></li>
      <li><a href="#projects">Projets</a></li>
      <li><a href="#contact">Contact</a></li>
    </ul>
    <!-- <a class="lang" href=`/${languageLink}`>{languageLink}</a> -->
    <ToggleThemeButton id="desktop" />
  </nav>
</div>
<nav class="mobile" aria-label="Navigation sur mobile">
  <ul>
    <li><a href="#about">A propos</a></li>
    <li><a href="#projects">Projets</a></li>
    <li><a href="#contact">Contact</a></li>
  </ul>
</nav>

<style lang="scss">
  .nav-wrapper {
    position: fixed;
    top: 1rem;
    left: 0;
    height: 60px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
    z-index: 999;
    pointer-events: none;
    .mobile-buttons {
      pointer-events: all;
      display: none;
      align-items: center;
      gap: 2rem;
      transition: transform 1s cubic-bezier(0, 0, 0.16, 1) 0.4s;
    }
    .hamburger {
      height: 30px;
      width: 36px;
      background: transparent;
      border: none;
      padding: 0;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      -webkit-tap-highlight-color: transparent;
      cursor: pointer;
      .line {
        height: 4px;
        width: 100%;
        background-color: var(--text);
        transition:
          transform 0.2s ease-out,
          opacity 0.2s ease-out,
          background-color var(--theme-transition);
      }
      &.is-open {
        .line {
          &:nth-child(1) {
            transform: translateY(13px) rotate(45deg);
          }
          &:nth-child(2) {
            opacity: 0;
          }
          &:nth-child(3) {
            transform: translateY(-13px) rotate(-45deg);
          }
        }
      }
    }
  }
  .lang {
    text-transform: uppercase;
    font-size: 1rem;
    font-weight: 400;
  }
  .animated {
    transform: translateY(20px) rotate(8deg);
  }
  nav {
    display: flex;
    align-items: center;
    justify-content: center;
    &.desktop {
      padding: 0 1.6rem;
      background-color: var(--nav-background);
      border-radius: 30px;
      box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.25);
      transform-origin: left center;
      transition:
        background-color var(--theme-transition),
        transform 1s cubic-bezier(0, 0, 0.16, 1) 0.4s;
      gap: 1.4rem;
      pointer-events: all;
      ul {
        display: flex;
        gap: 1.2rem;
        list-style: none;
        padding: 0;
        letter-spacing: 0.5px;
        a {
          font-weight: 600;
          font-size: 1rem;
          padding: 0 0.2rem;
          white-space: nowrap;
          transition: color var(--theme-transition);
        }
      }
    }
    &.mobile {
      height: 100vh;
      width: 100%;
      position: fixed;
      background-color: var(--nav-background);
      justify-content: center;
      display: none;
      z-index: 10;
      transform: translateX(100%);
      opacity: 0;
      transition:
        transform 0.3s cubic-bezier(0, 0, 0.16, 1),
        opacity 0.2s cubic-bezier(0, 0, 0.16, 1),
        background-color var(--theme-transition);
      &.is-open {
        transform: translateX(0);
        opacity: 1;
      }
      ul {
        list-style: none;
        padding: 0;
        a {
          font-size: 2.4rem;
          line-height: 1.8;
        }
      }
    }
  }

  @media (max-width: 768px) {
    .nav-wrapper {
      .mobile-buttons {
        display: flex;
      }
    }
    nav {
      &.desktop {
        display: none;
      }
      &.mobile {
        display: flex;
      }
    }
  }
  @media (max-width: 480px) {
    .nav-wrapper {
      top: 0.6rem;
      padding: 0 2rem 0 1.2rem;
    }
  }
</style>

<script>
  function toggleHamburger(hamburger: HTMLButtonElement | null) {
    if (!hamburger) return
    hamburger.classList.toggle('is-open')
    hamburger.ariaExpanded = hamburger.ariaExpanded =
      hamburger.ariaExpanded === 'true' ? 'false' : 'true'
  }

  const toggleMobileNav = (mobileNav: HTMLElement | null) =>
    mobileNav?.classList.toggle('is-open')

  const togglePageScroll = () => document.body.classList.toggle('no-scroll')

  function toggleMobileNavigation(
    hamburger: HTMLButtonElement | null,
    mobileNav: HTMLElement | null
  ) {
    toggleHamburger(hamburger)
    toggleMobileNav(mobileNav)
    togglePageScroll()
  }

  const hamburger = document.querySelector<HTMLButtonElement>('.hamburger')
  const mobileNav = document.querySelector<HTMLElement>('nav.mobile')

  hamburger?.addEventListener('click', () =>
    toggleMobileNavigation(hamburger, mobileNav)
  )

  const mobileNavLinks =
    document.querySelectorAll<HTMLAnchorElement>('nav.mobile a')

  mobileNavLinks.forEach((link) =>
    link.addEventListener('click', () =>
      toggleMobileNavigation(hamburger, mobileNav)
    )
  )
</script>
